//CI
import java.text.SimpleDateFormat
def dateFormat = new SimpleDateFormat("yyyy-MM-dd-HH-mm")
//def date = new Date()
rel_tag = dateFormat.format(new Date())
def git_branch = ""
def docker_registry = "953698017382.dkr.ecr.eu-west-1.amazonaws.com"
def docker_image = "${docker_registry}/alm-drupal"


def dockerRegistryLogin() {
    def login_command = ""
        login_command = sh(returnStdout: true,
            script: "aws ecr get-login --no-include-email --region eu-west-1 | sed -e 's|-e none||g'"
        )
    sh "sudo ${login_command}"
}

// def notifyviaMail(String buildStatus = 'SUCCESS') {
//     def decodedJobName = env.JOB_NAME.replaceAll("%2F", "/")
//     emailext attachLog: true, body: "${decodedJobName} - Build # ${env.BUILD_NUMBER} - ${buildStatus}: \n SSH URL:${ssh_url} \nCheck console output at ${env.BUILD_URL} to view the results in Attachments \n \n Thank you.", subject: "${decodedJobName}- Report", to: 'oncorps@srijan.net, eng.info@oncorps.io'
// }

node {
    try{
        stage("PreBuild"){
            try{
                sh "sudo rm -rf $WORKSPACE/*"
                sh "sudo rm -rf $WORKSPACE/.env"
                dockerRegistryLogin()
                def s = env.ref
                git_branch = s.tokenize("/")[-1]
                git branch: "${git_branch}", credentialsId: "gitaccess", url: "${ssh_url}"
            }
            catch(error){
                    echo "Unable to clone the repo"
                    throw error
                    currentBuild.result = "FAILURE"
            }
        }
        stage("Build"){
            try{
                sh "sudo docker pull 953698017382.dkr.ecr.eu-west-1.amazonaws.com/php-apache:7.2"
                if ( "${git_branch}" == "dev" || "${git_branch}" == "stage" || "${git_branch}" == "master"){
                        docker_image = "${docker_image}:${git_branch}-${BUILD_NUMBER}-${rel_tag}"
                } else{
                    echo "Not building Docker Image"
                    sh "exit 1"

                }
                dir('docroot') {
                echo "Running composer install"
                sh "sudo docker run -w=/var/www/html -v $WORKSPACE/docroot:/var/www/html ${docker_registry}/php-apache:7.2 composer install"
                
                }
                sh "sudo docker build -t ${docker_image} ."
            }
            catch(error){
                echo "Unable Build Docker image"
                throw error
                currentBuild.result = "FAILURE"
            }
        }
        stage("Push"){
            try{
                sh "sudo docker push ${docker_image}"                
                currentBuild.result = "SUCCESS"
            }
            catch(error){
                echo "Unable push docker image"
                throw error
                currentBuild.result = "FAILURE"
            }

        }
    }
    catch(error){
        currentBuild.result = "FAILURE"
        throw error
    }
    finally{
        // notifyviaMail(currentBuild.result)
        // notifyviaSlack()
    }
}